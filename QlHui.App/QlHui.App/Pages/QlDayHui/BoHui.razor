@page "/BoHui/{huiVienThamGiaId:int}"
@using QlHui.App.Data.Services
@inherits NotificationBase;
@inject DialogService dialogService;
@inject IQlHuiVienService qlHuiVienService;
@inject IQlHuiService qlHuiService;
<RadzenFieldset Text="Số tiền bỏ hụi" Style="font-weight:bold;">
    <RadzenNumeric Name="SoTienBoHui" style="display: block" @oninput="@(arg=>soTienBoHui = arg.Value.ToString().GetFloatNumber())"
                   TValue=string TextAlign="TextAlign.Right" Value="@soTienBoHui.GetMoneyFormat()" />
</RadzenFieldset>
<RadzenStack Orientation="Orientation.Horizontal" class="rz-p-2"
             JustifyContent="JustifyContent.End" Wrap="FlexWrap.Wrap">
    <RadzenButton ButtonStyle="ButtonStyle.Success" Variant="Variant.Flat" Text="Bỏ hụi" Icon="payments"
                  Disabled=@(soTienBoHui.HasValue == false || huiVienThamGiaHienTai==null) Click=@NhanBoHui />
</RadzenStack>
@code {
    [Parameter]
    public int huiVienThamGiaId { set; get; }
    float? soTienBoHui = null;
    HuiVienThamGiaDto huiVienThamGiaHienTai;
    protected override void OnParametersSet()
    {
        base.OnParametersSet();
        huiVienThamGiaHienTai = qlHuiVienService.LayThongTinHuiVienThamGia(huiVienThamGiaId);

    }
    async Task NhanBoHui()
    {
        try
        {
            if (!soTienBoHui.HasValue)
            {
                ShowErrorNotification("Vui lòng nhập số tiền bỏ hụi.");
                return;
            }
            string confirmMessage = $"Bạn có muốn bỏ hụi cho hụi viên này với số tiền {soTienBoHui.Value.GetMoneyFormat()} không ?";
            var xacNhanBoHui = await dialogService.Confirm(confirmMessage
                                  , $"Hụi Viên {huiVienThamGiaHienTai.TenHuiVien}",
                                   new ConfirmOptions() { OkButtonText = "Có", CancelButtonText = "Không" });

            if (xacNhanBoHui == false) return;

            var (rs, errorMessages) = qlHuiService.BoHui(huiVienThamGiaHienTai, soTienBoHui.Value);
            if (rs)
            {
                ShowSuccessNotification("Bỏ hụi thành công");
                dialogService.Close(true);
            }
            else
            {
                if (errorMessages.Count > 0)
                {
                    ShowErrorNotification(string.Join("\n", errorMessages));
                }
                else
                {
                    ShowErrorNotification("Có lỗi khi thực hiện thao tác.");
                }
            }
        }
        catch (Exception ex)
        {
            ShowErrorNotification(ex.GetError());
        }

    }
}
